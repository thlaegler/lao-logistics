<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.laegler.lao</groupId>
	<artifactId>parent.service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>LAO Parent - Service</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<spring.version>4.3.10.RELEASE</spring.version>
		<spring.boot.version>1.5.8.RELEASE</spring.boot.version>
		<spring.cloud.version>Dalston.SR4</spring.cloud.version>
		<spring.restdocs.version>1.2.2.RELEASE</spring.restdocs.version>
		<springfox.version>2.7.0</springfox.version>
		<lombok.version>1.16.18</lombok.version>
		<restassured.version>3.0.3</restassured.version>
		<cucumber.version>1.2.5</cucumber.version>
		<gherkin.version>2.12.2</gherkin.version>

		<!-- Plugin versions -->
		<dockerfile.plugin.version>1.3.6</dockerfile.plugin.version>
		<fabric8.plugin.version>3.5.33</fabric8.plugin.version>
		<fabric8.maven.plugin.version>0.23.0</fabric8.maven.plugin.version>
		<swagger.plugin.version>3.1.5</swagger.plugin.version>

		<spring.cloud.config.uri>http://daemon.config:8888</spring.cloud.config.uri>

		<!-- Docker -->
		<docker.registry>gcr.io/lao-logistics</docker.registry>
		<dockerfile.push.skip>true</dockerfile.push.skip>

		<!-- Swagger -->
		<api.port>8080</api.port>
		<api.domain>no_be_set_in_submodule</api.domain>
		<api.package>${project.groupId}.service.no_be_set_in_submodule</api.package>
		<api.basebath>/no_be_set_in_submodule</api.basebath>

		<jvm.args>-Dspring.profiles.active=default
			-Dspring.cloud.config.git.uri=${spring.cloud.config.uri}
			-Dspring.cloud.config.git.label=${spring.cloud.config.git.label}
			-Dserver.port=${api.port}</jvm.args>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.restdocs</groupId>
				<artifactId>spring-restdocs</artifactId>
				<version>${spring.restdocs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<!-- REST-Assured -->
			<dependency>
				<groupId>io.rest-assured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>${restassured.version}</version>
			</dependency>
			<dependency>
				<groupId>io.rest-assured</groupId>
				<artifactId>spring-mock-mvc</artifactId>
				<version>${restassured.version}</version>
			</dependency>

			<!-- Cucumber und Gherkin -->
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-core</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>${cucumber.version}</version>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>gherkin</artifactId>
				<version>${gherkin.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.artifactId}</finalName>

		<pluginManagement>
			<plugins>

				<!-- Spring Boot plugin -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<jvmArguments>${jvm.args}</jvmArguments>
						<excludeDevtools>false</excludeDevtools>
					</configuration>
				</plugin>

				<!-- Swagger Plugin (code2model) -->
				<plugin>
					<groupId>com.github.kongchen</groupId>
					<artifactId>swagger-maven-plugin</artifactId>
					<version>${swagger.plugin.version}</version>
					<configuration>
						<detail>true</detail>
						<apiSources>
							<apiSource>
								<springmvc>true</springmvc>
								<locations>
									<location>${api.package}</location>
								</locations>
								<swaggerFileName>${project.artifactId}</swaggerFileName>
								<schemes>http,https</schemes>
								<host>localhost:${api.port}</host>
								<basePath>${api.basepath}</basePath>
								<outputFormats>json,yaml</outputFormats>
								<jsonExampleValues>false</jsonExampleValues>
								<swaggerDirectory>${project.build.directory}</swaggerDirectory>
								<info>
									<title>${project.name} REST API</title>
									<version>${project.version}</version>
									<description>${project.description}</description>
									<vendorExtensions>
										<x-downstream-path>http://${project.artifactId}:8080</x-downstream-path>
									</vendorExtensions>
								</info>
							</apiSource>
						</apiSources>
					</configuration>
					<executions>
						<execution>
							<id>generate-swagger</id>
							<phase>package</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Docker plugin -->
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile.plugin.version}</version>
					<executions>
						<execution>
							<id>docker-build-push</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>build</goal>
								<goal>push</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
						<repository>${docker.registry}/${project.artifactId}</repository>
						<!-- <tag>${project.version}</tag> -->
						<buildArgs>
							<SERVER_PORT>${api.port}</SERVER_PORT>
							<SPRING_CLOUD_CONFIG_GIT_URI>${xmd.platform.config.git.uri}</SPRING_CLOUD_CONFIG_GIT_URI>
							<SPRING_CLOUD_CONFIG_GIT_LABEL>${xmd.platform.config.git.label}</SPRING_CLOUD_CONFIG_GIT_LABEL>
						</buildArgs>
					</configuration>
				</plugin>

				<!-- Kubernetes plugin -->
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>fabric8-maven-plugin</artifactId>
					<version>${fabric8.plugin.version}</version>
					<configuration>
						<skip>true</skip>
						<mode>kubernetes</mode>
						<buildStrategy>docker</buildStrategy>
						<detail>true</detail>
						<resourceFileType>yaml</resourceFileType>
						<registry>${docker.registry}</registry>
						<images>
							<image>
								<name>${docker.image}</name>
								<alias>${project.artifactId}</alias>
								<registry>${docker.registry}</registry>
								<build>
									<dockerFileDir>${project.build.directory}</dockerFileDir>
									<dockerFile>Dockerfile</dockerFile>
									<cleanup>true</cleanup>
								</build>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>fabric8-kube</id>
							<phase>deploy</phase>
							<goals>
								<goal>resource</goal>
								<goal>helm</goal>
								<goal>build</goal>
								<goal>push</goal>
								<goal>apply</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Swagger Plugin (model2code) -->
				<plugin>
					<groupId>io.swagger</groupId>
					<artifactId>swagger-codegen-maven-plugin</artifactId>
					<version>2.2.3</version>
					<executions>
						<execution>
							<id>java-client</id>
							<phase>install</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<language>java</language>
								<library>feign</library>
								<!-- <library>resttemplate</library> -->
								<!-- <library>jersey2</library> -->
								<inputSpec>${project.build.directory}/${project.artifactId}.yaml</inputSpec>
								<output>${project.basedir}/../../clients/client.${api.domain}</output>
								<apiPackage>${project.groupId}.client.${api.domain}.api</apiPackage>
								<modelPackage>${project.groupId}.client.${api.domain}.model</modelPackage>
								<invokerPackage>${project.groupId}.client.${api.domain}.invoker</invokerPackage>
								<configOptions>
									<dateLibrary>java8</dateLibrary>
									<serializableModel>true</serializableModel>
								</configOptions>
							</configuration>
						</execution>
						<execution>
							<id>angular4-client</id>
							<phase>install</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<language>typescript-angular2</language>
								<inputSpec>${project.build.directory}/${project.artifactId}.yaml</inputSpec>
								<output>${project.basedir}/../../frontends/frontend.angular4/src/app/client</output>
								<apiPackage>${api.domain}.api</apiPackage>
								<modelPackage>${api.domain}.model</modelPackage>
								<invokerPackage>${api.domain}.invoker</invokerPackage>
							</configuration>
						</execution>
						<execution>
							<id>php-client</id>
							<phase>install</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<language>php</language>
								<inputSpec>${project.build.directory}/${project.artifactId}.yaml</inputSpec>
								<output>${project.build.directory}/client.${api.domain}.php</output>
								<apiPackage>${api.domain}.api</apiPackage>
								<modelPackage>${api.domain}.model</modelPackage>
								<invokerPackage>${api.domain}.invoker</invokerPackage>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Testing plugins -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/*ITest.java</exclude>
							<exclude>**/*FeatureTest.java</exclude>
						</excludes>
						<testFailureIgnore>true</testFailureIgnore>
						<reuseForks>false</reuseForks>
						<forkCount>1</forkCount>
						<!-- <parallel>classes</parallel> <threadCount>10</threadCount> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*IT.java</include>
							<include>**/*ITest.java</include>
							<include>**/*Feature.java</include>
							<include>**/*FeatureTest.java</include>
							<include>**/*FeatureIT.java</include>
						</includes>
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
					<executions>
						<execution>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${fabric8.maven.plugin.version}</version>
					<executions>
						<execution>
							<id>before-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
							<configuration>
								<images>
									<image>
										<name>${docker.registry}/${project.artifactId}:latest</name>
										<alias>${project.artifactId}</alias>
									</image>
								</images>
							</configuration>
						</execution>
						<execution>
							<id>after-integration-test</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docu</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Documentation plugins -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.17</version>
							<executions>
								<execution>
									<phase>process-sources</phase>
									<goals>
										<goal>checkstyle</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>3.7</version>
							<executions>
								<execution>
									<phase>process-sources</phase>
									<goals>
										<goal>pmd</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.5</version>
							<executions>
								<execution>
									<goals>
										<goal>javadoc</goal>
										<goal>test-javadoc</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.5</version>
							<executions>
								<execution>
									<goals>
										<goal>jxr</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.9</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-changes-plugin</artifactId>
							<version>2.12.1</version>
							<executions>
								<execution>
									<id>include-announcement-file</id>
									<phase>generate-resources</phase>
									<goals>
										<goal>announcement-generate</goal>
									</goals>
									<configuration>
										<announcementFile>CHANGES.txt</announcementFile>
										<announcementDirectory>${project.build.outputDirectory}/META-INF</announcementDirectory>
									</configuration>
								</execution>
								<execution>
									<id>generate-jira-report</id>
									<phase>install</phase>
									<goals>
										<goal>jira-report</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<issueManagementSystems>
									<issueManagementSystem>JIRA</issueManagementSystem>
									<url>https://lao-logistics.atlassian.net/browse</url>
								</issueManagementSystems>
								<useJql>true</useJql>
								<onlyCurrentVersion>true</onlyCurrentVersion>
								<resolutionIds>Fixed,Done</resolutionIds>
								<statusIds>Closed,Resolved,QA</statusIds>
								<columnNames>Type,Key,Summary,Priority,Status,Resolution,Fix
									Version,Assignee
								</columnNames>
								<webUser>jira-machine-user</webUser>
								<webPassword>test</webPassword>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-changelog-plugin</artifactId>
							<version>2.3</version>
							<executions>
								<execution>
									<goals>
										<goal>changelog</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>3.6</version>
							<executions>
								<execution>
									<goals>
										<goal>site</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>

			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.5</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>2.5</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId>
						<version>2.12.1</version>
						<configuration>
							<useJql>true</useJql>
							<fixVersionIds>13722,12515</fixVersionIds>
							<onlyCurrentVersion>true</onlyCurrentVersion>
							<columnNames>Type,Key,Summary,Assignee,Status,Resolution,Fix
								Version
							</columnNames>
							<sortColumnNames>Type,Key DESC</sortColumnNames>
							<statusIds>Resolved, Closed</statusIds>
							<typeIds>Bug, New Feature, Improvement, Wish</typeIds>
							<filter>resolution=1&amp;sorter/field=issuetype&amp;sorter/order=ASC</filter>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>2.3</version>
						<reportSets>
							<reportSet>
								<id>dual-report</id>
								<configuration>
									<type>range</type>
									<range>30</range>
								</configuration>
								<reports>
									<report>changelog</report>
									<report>file-activity</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>

	<organization>
		<name>Lao Logistics</name>
		<url>http://www.lao-logistics.com</url>
	</organization>
	<inceptionYear>2017</inceptionYear>
	<developers>
		<developer>
			<id>thomas</id>
			<organization>Lao Logistics</organization>
			<organizationUrl>http://www.lao-logistics.com</organizationUrl>
			<email>thomas@lao-logistics.com</email>
		</developer>
	</developers>
	<issueManagement>
		<system>JIRA</system>
		<url>https://lao-logistics.atlassian.net/browse</url>
	</issueManagement>
	<scm>
		<url>https://bitbucket.org/tlaegler/lao-logistics</url>
		<connection>scm:git:git://bitbucket.org/tlaegler/lao-logistics</connection>
		<developerConnection>scm:git:git@bitbucket.org:tlaegler/lao-logistics.git</developerConnection>
	</scm>

	<!-- <repositories> <repository> <id>lao-logistics-maven-repository</id> 
		<name>lao-logistics-maven-repository</name> <url>gs://lao-logistics-maven-repository</url> 
		</repository> </repositories> -->

</project>
